import type { NextPage } from "next";
import Head from "next/head";
import CreateTaskForm from "../components/CreateTaskForm";
import TaskList from "../components/TaskList";
import {
  TasksDocument,
  TasksQuery,
  useTasksQuery,
} from "../generated/graphql-frontend";
import { initializeApollo } from "../lib/client";

const Home: NextPage = () => {
  const result = useTasksQuery();
  const tasks = result.data?.tasks;

  return (
    <div>
      <Head>
        <title>Tasks</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CreateTaskForm onSuccess={result.refetch} />
      {result.loading ? (
        <p>Loading tasks...</p>
      ) : result.error ? (
        <p>An error ocurred.</p>
      ) : tasks && tasks.length > 0 ? (
        <TaskList tasks={tasks} />
      ) : (
        <p className="no-tasks-message">You&apos;ve got no tasks.</p>
      )}
    </div>
  );
};

export default Home;

export const getStaticProps = async () => {
  const apolloClient = initializeApollo();

  await apolloClient.query<TasksQuery>({
    query: TasksDocument,
  });

  return {
    props: {
      initializeApolloState: apolloClient.cache.extract(),
    },
  };
};
